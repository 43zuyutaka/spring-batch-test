<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:property-placeholder
		location="classpath:batch.properties"
		system-properties-mode="OVERRIDE" ignore-resource-not-found="false"
		ignore-unresolvable="true" order="2" />
	<context:property-placeholder
		location="classpath:db.properties" system-properties-mode="OVERRIDE"
		ignore-resource-not-found="false" ignore-unresolvable="true" order="1" />

	<context:component-scan base-package="jp.co.smp" />

	<jdbc:initialize-database
		data-source="adminDataSource" ignore-failures="ALL">
		<jdbc:script location="${batch.schema.script}" />
	</jdbc:initialize-database>

	<batch:job-repository id="jobRepository"
		data-source="adminDataSource"
		transaction-manager="adminTransactionManager"
		isolation-level-for-create="READ_COMMITTED" />

	<bean id="adminTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="adminDataSource" p:rollbackOnCommitFailure="true" />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" p:rollbackOnCommitFailure="true" />

	<import resource="classpath:/META-INF/spring/module-context.xml" />

	<bean id="itemReader"
		class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<property name="lineMapper">
			<bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value="," />
						<property name="names" value="id,name,note" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="targetType"
							value="jp.co.smp.mapping.EmployeeData" />
					</bean>
				</property>
			</bean>
		</property>
		<property name="resource" value="#{jobParameters[inputFile]}" />
		<property name="linesToSkip" value="1" />
	</bean>

	<bean id="employeeMapper"
		class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface"
			value="jp.co.smp.mybatis.smp1.Smp1Mapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- mybatis用の設定 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driver}"
		p:url="${jdbc.url}" p:username="${jdbc.username}"
		p:password="${jdbc.password}" p:maxTotal="10" p:minIdle="1"
		p:maxWaitMillis="5000" p:defaultAutoCommit="false" />

	<bean id="adminDataSource"
		class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close" p:driverClassName="${admin.jdbc.driver}"
		p:url="${admin.jdbc.url}" p:username="${admin.jdbc.username}"
		p:password="${admin.jdbc.password}" p:maxTotal="10" p:minIdle="1"
		p:maxWaitMillis="5000" p:defaultAutoCommit="false" />

</beans>
